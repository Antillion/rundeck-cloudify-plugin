tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/3.4/types.yaml

data_types:
  rundeck_configuration:
    description: |
      Configuration of the Rundeck host
    properties:
      hostname:  { type: string, default: {get_property: [compute_node, hostname]} }
      api_token: { type: string, default: {get_property: [compute_node, api_token]}}
      port:      { type: string, default: {get_property: [compute_node, port]} }
      protocol:  { type: string, default: {get_property: [compute_node, protocol]} }

node_types:
  antillion.cfyrundeck.RundeckConfigNode:
    derived_from: cloudify.nodes.Root
    properties:
      install_agent: {default: false}
      hostname:      {type: string}
      api_token:     {type: string}
      port:          {type: string}
      protocol:      {type: string}
    interfaces:
      cloudify.interfaces.validation:
        creation:
          implementation: antillion.cfyrundeck.jobs.validate_config_node


  antillion.cfyrundeck.SimpleRundeckNode:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      install_agent: {default: false}
      rundeck_config: {type: rundeck_configuration}
      job_id: {type: string}
    interfaces:
      cloudify.interfaces.validation:
        creation:
          implementation: antillion.cfyrundeck.jobs.validate_job
          inputs:
            job_id: { default: {get_property: [SELF, job_id]} }
      cloudify.interfaces.lifecycle:
        create:
          implementation: antillion.cfyrundeck.jobs.execute_v2
          inputs:
            rundeck_config: { default: {get_property: [SELF, rundeck_config]} }
            job_id:
              type: string
            args:
              default: {}
              description: ''

workflows:
  antillion.rundeck.import_job:
    mapping: antillion.cfyrundeck.jobs.import_job
    parameters:
      file_url:
        description: URL to the job
      project:
        description: The name of the project to import into
      format:
        description: yaml / xml
      preserve_uuid:
        description: Whether to preserve the UUID of the job or create a new one
        default: true
      rundeck:
        default: {}
        description: dictionary with hostname and api_token

  antillion.rundeck.import_project_archive:
    mapping: antillion.cfyrundeck.projects.import_archive
    parameters:
      project:
        description: The name of the project that will have the archive imported into
      archive_url:
        description: URL to the project archive
      preserve_uuid:
        default: true
      import_executions:
        default: false
      import_config:
        default: false
      import_acls:
        default: false
      rundeck:
        default: {}
        description: dictionary with hostname and api_token
